name: push
on:
  workflow_dispatch:
  push:
    branches:
       - master
       - main
  pull_request:
    branches:
       - master
       - main

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.7
  #     - uses: actions/cache@v2
  #       with:
  #         path: ${{ env.pythonLocation }}
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.cfg') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-
  #     - name: Run pre-commit
  #       run: |
  #           pip install pre-commit
  #           pre-commit autoupdate
  #           pre-commit run --all-files
  # tests:
  #   runs-on: ${{ matrix.os }}
  #   needs: lint
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       python-version: [3.7]
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version:  ${{ matrix.python-version }}
  #     - name: Install requirements
  #       run: |
  #             pip install .[test]
  #             pip install tox
  #     - name: Run linux test
  #       if: matrix.os == 'ubuntu-latest'
  #       run: tox -e py"${PYVER//.}"
  #       env:
  #          PYVER: ${{ matrix.python-version }}
  #     - name: Run windows test
  #       if: matrix.os == 'windows-latest'
  #       run: tox -e py${env:PYVER//.}
  #       env:
  #          PYVER: ${{ matrix.python-version }}
  #     - name: Upload to coveralls
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: coveralls --service=github

  build:
    runs-on: ubuntu-latest
    # needs: tests
    env:
      CI: true
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Generate pot file"
        run: |
             sudo apt-get install gettext
             pygettext.py -v -d base -o spoonbill/locales/base.pot spoonbill/
      - name: "Download translate files from transifex"
        uses: docker://sergioisidoro/github-transifex-action:v0.2.0
        with:
            TX_TOKEN: ${{ secrets.TX_TOKEN }}
            git_flow: false
            github_token: ${{ secrets.GITHUB_TOKEN }}
            pull_translations: true
            pull_sources: false
            push_translations: false
            push_sources: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/pontostroy/spoonbill:latest
